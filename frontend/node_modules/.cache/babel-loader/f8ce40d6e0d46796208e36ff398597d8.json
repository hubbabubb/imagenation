{"ast":null,"code":"var _jsxFileName = \"/Users/hubbabubb/Documents/codecool/imagenation/frontend/src/components/visualizer/Display.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport InlineSVG from 'svg-inline-react';\nimport { Button, ButtonGroup, makeStyles } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    position: \"relative\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttons: {\n    position: 'absolute',\n    display: \"block\",\n    left: 10,\n    top: 10\n  }\n}));\nconst CssDisplay = styled.div`\n    font-family: ''\n    width: 100%;\n    height: 100%;\n    background-color: black;\n`;\n_c = CssDisplay;\nexport default function Display(props) {\n  _s();\n\n  const [display, setDisplay] = useState(\"display\");\n  const classes = useStyles();\n  const Theme = styled.div`\n    svg {\n       width: ${props.theme.size + \"px\"};\n       fill: ${props.theme.color};\n       stroke: ${props.theme.borderColor};\n       stroke-width: ${props.theme.borderWidth + \"px\"}; \n       } \n    `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      className: classes.buttons,\n      size: \"small\",\n      \"aria-label\": \"small outlined button group\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setDisplay(\"display\");\n        },\n        color: \"primary\",\n        children: \"Display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setDisplay(\"css\");\n        },\n        color: \"secondary\",\n        children: \"CSS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), display === \"display\" ? /*#__PURE__*/_jsxDEV(Theme, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(InlineSVG, {\n        src: props.theme.objectFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(CssDisplay, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Display, \"74ROvY5XfK5BvHdU6v+MSbED7l4=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Display;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CssDisplay\");\n$RefreshReg$(_c2, \"Display\");","map":{"version":3,"sources":["/Users/hubbabubb/Documents/codecool/imagenation/frontend/src/components/visualizer/Display.js"],"names":["React","useState","styled","InlineSVG","Button","ButtonGroup","makeStyles","useStyles","theme","root","width","position","height","display","alignItems","justifyContent","buttons","left","top","CssDisplay","div","Display","props","setDisplay","classes","Theme","size","color","borderColor","borderWidth","objectFile"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAAQC,MAAR,EAAgBC,WAAhB,EAA6BC,UAA7B,QAA8C,mBAA9C;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,QAAQ,EAAE,UAFR;AAGFC,IAAAA,MAAM,EAAE,MAHN;AAIFC,IAAAA,OAAO,EAAE,MAJP;AAKFC,IAAAA,UAAU,EAAE,QALV;AAMFC,IAAAA,cAAc,EAAE;AANd,GAD+B;AAUrCC,EAAAA,OAAO,EAAE;AACLL,IAAAA,QAAQ,EAAE,UADL;AAELE,IAAAA,OAAO,EAAE,OAFJ;AAGLI,IAAAA,IAAI,EAAE,EAHD;AAILC,IAAAA,GAAG,EAAE;AAJA;AAV4B,CAAZ,CAAD,CAA5B;AAkBA,MAAMC,UAAU,GAAGjB,MAAM,CAACkB,GAAI;AAC9B;AACA;AACA;AACA;AACA,CALA;KAAMD,U;AAON,eAAe,SAASE,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACnC,QAAM,CAACT,OAAD,EAAUU,UAAV,IAAwBtB,QAAQ,CAAC,SAAD,CAAtC;AACA,QAAMuB,OAAO,GAAGjB,SAAS,EAAzB;AACA,QAAMkB,KAAK,GAAGvB,MAAM,CAACkB,GAAI;AAC7B;AACA,gBAAiBE,KAAK,CAACd,KAAN,CAAYkB,IAAb,GAAqB,IAAK;AAC1C,eAAeJ,KAAK,CAACd,KAAN,CAAYmB,KAAM;AACjC,iBAAiBL,KAAK,CAACd,KAAN,CAAYoB,WAAY;AACzC,uBAAuBN,KAAK,CAACd,KAAN,CAAYqB,WAAZ,GAA0B,IAAK;AACtD;AACA,KAPI;AAUA,sBAAO;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACf,IAAxB;AAAA,4BACH,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEe,OAAO,CAACR,OAAhC;AAAyC,MAAA,IAAI,EAAC,OAA9C;AAAsD,oBAAW,6BAAjE;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM;AAACO,UAAAA,UAAU,CAAC,SAAD,CAAV;AAAsB,SAA9C;AAAgD,QAAA,KAAK,EAAC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM;AAACA,UAAAA,UAAU,CAAC,KAAD,CAAV;AAAkB,SAA1C;AAA4C,QAAA,KAAK,EAAC,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,EAKFV,OAAO,KAAK,SAAZ,gBACG,QAAC,KAAD;AAAA,mCAAQ,QAAC,SAAD;AAAW,QAAA,GAAG,EAAES,KAAK,CAACd,KAAN,CAAYsB;AAA5B;AAAA;AAAA;AAAA;AAAA,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAGG,QAAC,UAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH;;GA1BuBT,O;UAEJd,S;;;MAFIc,O","sourcesContent":["import React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport InlineSVG from 'svg-inline-react';\nimport {Button, ButtonGroup, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        position: \"relative\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n\n    },\n    buttons: {\n        position: 'absolute',\n        display: \"block\",\n        left: 10,\n        top: 10,\n    },\n}));\n\nconst CssDisplay = styled.div`\n    font-family: ''\n    width: 100%;\n    height: 100%;\n    background-color: black;\n`;\n\nexport default function Display(props) {\n    const [display, setDisplay] = useState(\"display\")\n    const classes = useStyles();\n    const Theme = styled.div`\n    svg {\n       width: ${(props.theme.size) + \"px\"};\n       fill: ${props.theme.color};\n       stroke: ${props.theme.borderColor};\n       stroke-width: ${props.theme.borderWidth + \"px\"}; \n       } \n    `;\n\n\n    return <div className={classes.root}>\n        <ButtonGroup className={classes.buttons} size=\"small\" aria-label=\"small outlined button group\">\n            <Button onClick={() => {setDisplay(\"display\")}} color=\"primary\">Display</Button>\n            <Button onClick={() => {setDisplay(\"css\")}} color=\"secondary\">CSS</Button>\n        </ButtonGroup>\n        {display === \"display\" ?\n            <Theme> <InlineSVG src={props.theme.objectFile}/> </Theme>\n            :\n            <CssDisplay>\n                <p></p>\n            </CssDisplay>\n        }\n    </div>\n}"]},"metadata":{},"sourceType":"module"}