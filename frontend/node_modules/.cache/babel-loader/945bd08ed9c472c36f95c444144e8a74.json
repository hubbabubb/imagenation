{"ast":null,"code":"var _jsxFileName = \"/Users/hubbabubb/Documents/codecool/imagenation/frontend/src/components/visualizer/Display.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Display(props) {\n  _s();\n\n  const Theme = styled.div`\n       width: ${this.props.theme.size};\n       fill: ${this.props.theme.color};\n       stroke-color: ${this.props.theme.borderColor};\n       stroke-width: ${this.props.theme.borderWidth};       \n    `;\n  let theme = useStyles();\n  const SvgObject = props.svg;\n  return /*#__PURE__*/_jsxDEV(Theme, {\n    children: /*#__PURE__*/_jsxDEV(SvgObject, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Display, \"jSTR40E72HSelYtSdgEOt4YwI9I=\", true);\n\n_c = Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["/Users/hubbabubb/Documents/codecool/imagenation/frontend/src/components/visualizer/Display.js"],"names":["React","styled","Display","props","Theme","div","theme","size","color","borderColor","borderWidth","useStyles","SvgObject","svg"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAGA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACnC,QAAMC,KAAK,GAAGH,MAAM,CAACI,GAAI;AAC7B,gBAAgB,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,IAAK;AACtC,eAAe,KAAKJ,KAAL,CAAWG,KAAX,CAAiBE,KAAM;AACtC,uBAAuB,KAAKL,KAAL,CAAWG,KAAX,CAAiBG,WAAY;AACpD,uBAAuB,KAAKN,KAAL,CAAWG,KAAX,CAAiBI,WAAY;AACpD,KALI;AAMA,MAAIJ,KAAK,GAAGK,SAAS,EAArB;AAEA,QAAMC,SAAS,GAAGT,KAAK,CAACU,GAAxB;AAEA,sBAAO,QAAC,KAAD;AAAA,2BACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH;;GAduBX,O;;KAAAA,O","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\n\nexport default function Display(props) {\n    const Theme = styled.div`\n       width: ${this.props.theme.size};\n       fill: ${this.props.theme.color};\n       stroke-color: ${this.props.theme.borderColor};\n       stroke-width: ${this.props.theme.borderWidth};       \n    `;\n    let theme = useStyles();\n\n    const SvgObject = props.svg;\n\n    return <Theme>\n            <SvgObject/>\n    </Theme>\n}"]},"metadata":{},"sourceType":"module"}