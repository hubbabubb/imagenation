{"ast":null,"code":"var _jsxFileName = \"/Users/hubbabubb/Documents/codecool/imagenation/frontend/src/components/visualizer/Display.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport InlineSVG from 'svg-inline-react';\nimport { Button, ButtonGroup, makeStyles } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    left: 10,\n    top: 5\n  }\n}));\nexport default function Display(props) {\n  _s();\n\n  const classes = useStyles();\n  const Theme = styled.div`\n    svg {\n       width: ${props.theme.size + \"px\"};\n       fill: ${props.theme.color};\n       stroke: ${props.theme.borderColor};\n       stroke-width: ${props.theme.borderWidth + \"px\"}; \n            \n       } \n    `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      className: classes.root,\n      size: \"small\",\n      \"aria-label\": \"small outlined button group\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        children: \"Display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"CSS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Theme, {\n      children: /*#__PURE__*/_jsxDEV(InlineSVG, {\n        src: props.theme.objectFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Display, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["/Users/hubbabubb/Documents/codecool/imagenation/frontend/src/components/visualizer/Display.js"],"names":["React","styled","InlineSVG","Button","ButtonGroup","makeStyles","useStyles","theme","root","position","left","top","Display","props","classes","Theme","div","size","color","borderColor","borderWidth","objectFile"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAAQC,MAAR,EAAgBC,WAAhB,EAA6BC,UAA7B,QAA8C,mBAA9C;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,UADR;AAEFC,IAAAA,IAAI,EAAE,EAFJ;AAGFC,IAAAA,GAAG,EAAC;AAHF;AAD+B,CAAZ,CAAD,CAA5B;AAQA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACnC,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAMS,KAAK,GAAGd,MAAM,CAACe,GAAI;AAC7B;AACA,gBAAiBH,KAAK,CAACN,KAAN,CAAYU,IAAb,GAAqB,IAAK;AAC1C,eAAeJ,KAAK,CAACN,KAAN,CAAYW,KAAM;AACjC,iBAAiBL,KAAK,CAACN,KAAN,CAAYY,WAAY;AACzC,uBAAuBN,KAAK,CAACN,KAAN,CAAYa,WAAZ,GAA0B,IAAK;AACtD;AACA;AACA,KARI;AAWA,sBAAO;AAAA,4BACH,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEN,OAAO,CAACN,IAAhC;AAAsC,MAAA,IAAI,EAAC,OAA3C;AAAmD,oBAAW,6BAA9D;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAKH,QAAC,KAAD;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,GAAG,EAAEK,KAAK,CAACN,KAAN,CAAYc;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AASH;;GAtBuBT,O;UACJN,S;;;KADIM,O","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport InlineSVG from 'svg-inline-react';\nimport {Button, ButtonGroup, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: 'relative',\n        left: 10,\n        top:5\n    },\n}));\n\nexport default function Display(props) {\n    const classes = useStyles();\n    const Theme = styled.div`\n    svg {\n       width: ${(props.theme.size) + \"px\"};\n       fill: ${props.theme.color};\n       stroke: ${props.theme.borderColor};\n       stroke-width: ${props.theme.borderWidth + \"px\"}; \n            \n       } \n    `;\n\n\n    return <div>\n        <ButtonGroup className={classes.root} size=\"small\" aria-label=\"small outlined button group\">\n            <Button>Display</Button>\n            <Button>CSS</Button>\n        </ButtonGroup>\n        <Theme>\n            <InlineSVG src={props.theme.objectFile}/>\n        </Theme>\n    </div>\n}"]},"metadata":{},"sourceType":"module"}